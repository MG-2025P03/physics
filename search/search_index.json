{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction This is the website for Meynard Gilhang's Physics activities. This is my first time to use GitHub and i'm still grasping trying to adapt and learn the new scripting languages that are being presented as part of this solution. I am a B.S. Computer Science in the Philippines and I've been a programmer since. I am your typical IT specialist (jack-of-all trades) with the following background: * Multimedia developer (technology no longer available) * Help authoring specialists (InstallShield) * Web developer (Macromededia ColdFusion, Classic ASP and .Net (vba/c#)) * Data specialist (SQL Integration Services, and Reporting Services) * Business Intelligence Developer using Microsoft Power Plastform (Power Apps, Power Automate and Power BI) I am currently working as a Power Apps Developer processing remote tasks for a US client. Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) c GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"This is the website for Meynard Gilhang's Physics activities. This is my first time to use GitHub and i'm still grasping trying to adapt and learn the new scripting languages that are being presented as part of this solution. I am a B.S. Computer Science in the Philippines and I've been a programmer since. I am your typical IT specialist (jack-of-all trades) with the following background: * Multimedia developer (technology no longer available) * Help authoring specialists (InstallShield) * Web developer (Macromededia ColdFusion, Classic ASP and .Net (vba/c#)) * Data specialist (SQL Integration Services, and Reporting Services) * Business Intelligence Developer using Microsoft Power Plastform (Power Apps, Power Automate and Power BI) I am currently working as a Power Apps Developer processing remote tasks for a US client.","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) c GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"Physics/1%20Mechanics/1.TheoreticalFoundation/","text":"Theoretical Foundation Derive the equations of motion starting with Newton's second law: F = MA, accounting for gravitational force acting downward. Use kinematic equations to find expressions for horizontal (\ud835\udc65) and vertical (\ud835\udc66) positions as functions of time. Establish the general trajectory equation: y = x \\tan(\\theta) - frac{g x^2}{2(v \\cos(\\theta))^2}$$, where \ud835\udc54 is gravitational acceleration, \ud835\udc63 is initial velocity, and \ud835\udf03 is the angle of projection. Fundamental Principles Projectile motion occurs under constant acceleration due to gravity (\ud835\udc54) and is governed by Newton's second law of motion: F = MA For a projectile, we can break its motion into two components: Horizontal motion: Constant velocity since there is no horizontal acceleration (neglecting air resistance). Vertical motion: Accelerated motion due to gravitational force acting downward.","title":"Theoretical Foundation"},{"location":"Physics/1%20Mechanics/1.TheoreticalFoundation/#theoretical-foundation","text":"Derive the equations of motion starting with Newton's second law: F = MA, accounting for gravitational force acting downward. Use kinematic equations to find expressions for horizontal (\ud835\udc65) and vertical (\ud835\udc66) positions as functions of time. Establish the general trajectory equation: y = x \\tan(\\theta) - frac{g x^2}{2(v \\cos(\\theta))^2}$$, where \ud835\udc54 is gravitational acceleration, \ud835\udc63 is initial velocity, and \ud835\udf03 is the angle of projection. Fundamental Principles Projectile motion occurs under constant acceleration due to gravity (\ud835\udc54) and is governed by Newton's second law of motion: F = MA For a projectile, we can break its motion into two components: Horizontal motion: Constant velocity since there is no horizontal acceleration (neglecting air resistance). Vertical motion: Accelerated motion due to gravitational force acting downward.","title":"Theoretical Foundation"},{"location":"Physics/1%20Mechanics/2.RangeAnalysis/","text":"Range Analysis Derive the range formula: \\( \\(R = \\frac{v^2 \\sin(2\\theta)}{g}\\) \\) . Analyze the dependence on \ud835\udf03: Identify the optimal angle (45\u2218) for maximum range in ideal conditions. Investigate how the range changes with variations in \ud835\udc63 and \ud835\udc54, observing proportional relationships. Discuss edge cases, such as when \ud835\udf03 = 0\u2218 (horizontal projection) or 90\u2218 (vertical projection).","title":"Range Analysis"},{"location":"Physics/1%20Mechanics/2.RangeAnalysis/#range-analysis","text":"Derive the range formula: \\( \\(R = \\frac{v^2 \\sin(2\\theta)}{g}\\) \\) . Analyze the dependence on \ud835\udf03: Identify the optimal angle (45\u2218) for maximum range in ideal conditions. Investigate how the range changes with variations in \ud835\udc63 and \ud835\udc54, observing proportional relationships. Discuss edge cases, such as when \ud835\udf03 = 0\u2218 (horizontal projection) or 90\u2218 (vertical projection).","title":"Range Analysis"},{"location":"Physics/1%20Mechanics/3.PracticalApplications/","text":"Practical Applications Examine real-world factors like air resistance, uneven terrain, and varying gravity (e.g., on other planets). Discuss scenarios like sports (soccer, basketball) and aerospace engineering (rocket launches). Explore how launch height affects the trajectory and range.","title":"Practical Applications"},{"location":"Physics/1%20Mechanics/3.PracticalApplications/#practical-applications","text":"Examine real-world factors like air resistance, uneven terrain, and varying gravity (e.g., on other planets). Discuss scenarios like sports (soccer, basketball) and aerospace engineering (rocket launches). Explore how launch height affects the trajectory and range.","title":"Practical Applications"},{"location":"Physics/1%20Mechanics/4.Conditions/","text":"Implementation Write a simulation program (e.g., in Python or MATLAB) using numerical methods to solve projectile motion equations. Generate plots for the range as a function of projection angle under varying initial conditions (e.g., \ud835\udc63, \ud835\udc54, launch height). Example visualization: polar or Cartesian plots highlighting key relationships. Visualization Sample Code (Python): python import numpy as np import matplotlib.pyplot as plt Parameters g = 9.8 # Gravity (m/s^2) v = 20 # Initial velocity (m/s) angles = np.linspace(0, np.pi/2, 100) # Projection angles in radians Range calculation ranges = (v**2 * np.sin(2 * angles)) / g Plotting plt.figure(figsize=(10, 6)) plt.plot(np.degrees(angles), ranges) plt.title('Projectile Range vs Angle of Projection') plt.xlabel('Angle (degrees)') plt.ylabel('Range (m)') plt.grid() plt.show() This script can be expanded to incorporate more complex parameters and real-world considerations. Would you like help implementing this simulation or deriving the equations in more detail? This is a fascinating topic, and I'd love to explore it further with you.","title":"Implementation"},{"location":"Physics/1%20Mechanics/4.Conditions/#implementation","text":"Write a simulation program (e.g., in Python or MATLAB) using numerical methods to solve projectile motion equations. Generate plots for the range as a function of projection angle under varying initial conditions (e.g., \ud835\udc63, \ud835\udc54, launch height). Example visualization: polar or Cartesian plots highlighting key relationships. Visualization Sample Code (Python): python import numpy as np import matplotlib.pyplot as plt","title":"Implementation"},{"location":"Physics/1%20Mechanics/4.Conditions/#parameters","text":"g = 9.8 # Gravity (m/s^2) v = 20 # Initial velocity (m/s) angles = np.linspace(0, np.pi/2, 100) # Projection angles in radians","title":"Parameters"},{"location":"Physics/1%20Mechanics/4.Conditions/#range-calculation","text":"ranges = (v**2 * np.sin(2 * angles)) / g","title":"Range calculation"},{"location":"Physics/1%20Mechanics/4.Conditions/#plotting","text":"plt.figure(figsize=(10, 6)) plt.plot(np.degrees(angles), ranges) plt.title('Projectile Range vs Angle of Projection') plt.xlabel('Angle (degrees)') plt.ylabel('Range (m)') plt.grid() plt.show() This script can be expanded to incorporate more complex parameters and real-world considerations. Would you like help implementing this simulation or deriving the equations in more detail? This is a fascinating topic, and I'd love to explore it further with you.","title":"Plotting"},{"location":"Physics/1%20Mechanics/5.Inferences/","text":"Inferences and Hypotheses","title":"Inferences and Hypotheses"},{"location":"Physics/1%20Mechanics/5.Inferences/#inferences-and-hypotheses","text":"","title":"Inferences and Hypotheses"},{"location":"Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"}]}