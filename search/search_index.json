{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction This is the website for Meynard Gilhang's Physics activities. This is my first time to use GitHub and i'm still grasping trying to adapt and learn the new scripting languages that are being presented as part of this solution. I am a B.S. Computer Science in the Philippines and I've been a programmer since. I am your typical IT specialist (jack-of-all trades) with the following background: * Multimedia developer (technology no longer available) * Help authoring specialists (InstallShield) * Web developer (Macromededia ColdFusion, Classic ASP and .Net (vba/c#)) * Data specialist (SQL Integration Services, and Reporting Services) * Business Intelligence Developer using Microsoft Power Plastform (Power Apps, Power Automate and Power BI) I am currently working as a Power Apps Developer processing remote tasks for a US client. Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) c GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"This is the website for Meynard Gilhang's Physics activities. This is my first time to use GitHub and i'm still grasping trying to adapt and learn the new scripting languages that are being presented as part of this solution. I am a B.S. Computer Science in the Philippines and I've been a programmer since. I am your typical IT specialist (jack-of-all trades) with the following background: * Multimedia developer (technology no longer available) * Help authoring specialists (InstallShield) * Web developer (Macromededia ColdFusion, Classic ASP and .Net (vba/c#)) * Data specialist (SQL Integration Services, and Reporting Services) * Business Intelligence Developer using Microsoft Power Plastform (Power Apps, Power Automate and Power BI) I am currently working as a Power Apps Developer processing remote tasks for a US client.","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) c GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"Physics/1%20Mechanics/2.RangeAnalysis/","text":"Range Analysis Optimal Angle for Maximum Range: Theory: For a projectile launched on a flat surface (i.e., launch height = landing height), the optimal angle for maximum range is 45 degrees. This is because the horizontal and vertical components of the initial velocity are equal, maximizing the distance. With Launch Height: If the launch height is above the landing height, the angle for maximum range is slightly less than 45 degrees, as the projectile benefits from additional time in the air. Symmetric Trajectories: Description: When launched from and landing on the same height, the projectile's path is symmetric around the peak. Angles: Two angles will yield the same range: (\\theta) and (90^\\circ - \\theta). For example, angles of 30 degrees and 60 degrees will result in the same range, but different times of flight and maximum heights. Time of Flight: Dependency: Depends on the vertical component of the initial velocity and the height difference between launch and landing. Calculation: For non-zero launch height, the time of flight can be found using kinematic equations that incorporate both the initial vertical velocity component and the effect of gravity. Maximum Height: Calculation: Depends on the vertical component of the initial velocity and gravitational acceleration. For launch height (h), the maximum height (H) is given by: [ H = h + \\frac{(v\u2080 \\sin \\theta)^2}{2g} ] Effect of Air Resistance: Real-World Consideration: Although not accounted for in basic projectile motion equations, air resistance can significantly affect the trajectory, reducing both range and height, and altering the optimal angle of projection.","title":"Range Analysis"},{"location":"Physics/1%20Mechanics/2.RangeAnalysis/#range-analysis","text":"Optimal Angle for Maximum Range: Theory: For a projectile launched on a flat surface (i.e., launch height = landing height), the optimal angle for maximum range is 45 degrees. This is because the horizontal and vertical components of the initial velocity are equal, maximizing the distance. With Launch Height: If the launch height is above the landing height, the angle for maximum range is slightly less than 45 degrees, as the projectile benefits from additional time in the air. Symmetric Trajectories: Description: When launched from and landing on the same height, the projectile's path is symmetric around the peak. Angles: Two angles will yield the same range: (\\theta) and (90^\\circ - \\theta). For example, angles of 30 degrees and 60 degrees will result in the same range, but different times of flight and maximum heights. Time of Flight: Dependency: Depends on the vertical component of the initial velocity and the height difference between launch and landing. Calculation: For non-zero launch height, the time of flight can be found using kinematic equations that incorporate both the initial vertical velocity component and the effect of gravity. Maximum Height: Calculation: Depends on the vertical component of the initial velocity and gravitational acceleration. For launch height (h), the maximum height (H) is given by: [ H = h + \\frac{(v\u2080 \\sin \\theta)^2}{2g} ] Effect of Air Resistance: Real-World Consideration: Although not accounted for in basic projectile motion equations, air resistance can significantly affect the trajectory, reducing both range and height, and altering the optimal angle of projection.","title":"Range Analysis"},{"location":"Physics/1%20Mechanics/3.PracticalApplications/","text":"Practical Applications Projectile motion on uneven terrain and in the presence of air resistance is common in many real-world scenarios. These factors add complexity to predicting and optimizing trajectories, requiring careful analysis and adjustments. Here are some practical applications: 1. Military and Defense: Artillery and Ballistics: Artillery shells and missiles are often launched over uneven terrain and must account for air resistance. Advanced calculations and computer simulations help predict trajectories to accurately hit targets, considering factors like wind, air density, and varying elevation. Mortars and Rockets: Similar to artillery, mortars and rockets must adjust their launch angles and velocities to account for uneven terrain and atmospheric conditions to achieve desired impact points. 2. Sports: Golf: Golfers must consider the uneven terrain of a golf course, including hills and valleys, as well as wind conditions when choosing clubs and angles to optimize their shots. Ski Jumping: Ski jumpers launch from a slope and must navigate the air while accounting for wind resistance to achieve maximum distance and optimal landing on a descending slope. 3. Engineering and Construction: Demolition Using Explosives: Controlled demolitions often require precise calculations of projectile debris to ensure safety and effectiveness, considering the complex terrain of the demolition site. Bridge and Building Design: When constructing bridges or buildings, engineers use projectile motion principles to simulate potential debris trajectories from construction activities, ensuring safety on uneven terrain. 4. Space Exploration: Lunar and Planetary Landers: Landers must be designed to account for uneven terrain on celestial bodies and thin atmospheres when planning descent trajectories for safe landings. Mars Rovers: When launching projectiles or deploying components from rovers, engineers must consider Mars' uneven terrain and thin atmosphere to ensure successful operations. 5. Entertainment and Media: Stunt Coordination: In movies and shows, stunts involving projectile motion (e.g., jumping cars or bikes) need careful planning to account for uneven surfaces and air resistance to ensure the safety of performers. Fireworks Displays: Pyrotechnicians consider wind and varying terrain to design fireworks shows that achieve desired visual effects while ensuring safety and precision. 6. Aerospace and Aviation: Aircraft Bombing: When planes drop bombs or other projectiles, pilots and systems must account for the speed of the aircraft, altitude, air resistance, and terrain below to accurately hit targets. Drone Deliveries: Drones navigating uneven urban environments must account for wind currents and obstacles when delivering packages to specific locations.","title":"Practical Applications"},{"location":"Physics/1%20Mechanics/3.PracticalApplications/#practical-applications","text":"Projectile motion on uneven terrain and in the presence of air resistance is common in many real-world scenarios. These factors add complexity to predicting and optimizing trajectories, requiring careful analysis and adjustments. Here are some practical applications: 1. Military and Defense: Artillery and Ballistics: Artillery shells and missiles are often launched over uneven terrain and must account for air resistance. Advanced calculations and computer simulations help predict trajectories to accurately hit targets, considering factors like wind, air density, and varying elevation. Mortars and Rockets: Similar to artillery, mortars and rockets must adjust their launch angles and velocities to account for uneven terrain and atmospheric conditions to achieve desired impact points. 2. Sports: Golf: Golfers must consider the uneven terrain of a golf course, including hills and valleys, as well as wind conditions when choosing clubs and angles to optimize their shots. Ski Jumping: Ski jumpers launch from a slope and must navigate the air while accounting for wind resistance to achieve maximum distance and optimal landing on a descending slope. 3. Engineering and Construction: Demolition Using Explosives: Controlled demolitions often require precise calculations of projectile debris to ensure safety and effectiveness, considering the complex terrain of the demolition site. Bridge and Building Design: When constructing bridges or buildings, engineers use projectile motion principles to simulate potential debris trajectories from construction activities, ensuring safety on uneven terrain. 4. Space Exploration: Lunar and Planetary Landers: Landers must be designed to account for uneven terrain on celestial bodies and thin atmospheres when planning descent trajectories for safe landings. Mars Rovers: When launching projectiles or deploying components from rovers, engineers must consider Mars' uneven terrain and thin atmosphere to ensure successful operations. 5. Entertainment and Media: Stunt Coordination: In movies and shows, stunts involving projectile motion (e.g., jumping cars or bikes) need careful planning to account for uneven surfaces and air resistance to ensure the safety of performers. Fireworks Displays: Pyrotechnicians consider wind and varying terrain to design fireworks shows that achieve desired visual effects while ensuring safety and precision. 6. Aerospace and Aviation: Aircraft Bombing: When planes drop bombs or other projectiles, pilots and systems must account for the speed of the aircraft, altitude, air resistance, and terrain below to accurately hit targets. Drone Deliveries: Drones navigating uneven urban environments must account for wind currents and obstacles when delivering packages to specific locations.","title":"Practical Applications"},{"location":"Physics/1%20Mechanics/4.Implementation/","text":"Implementation Run simulations on Projectile Motion When a projectile is launched with an initial velocity ( v_0 ) at an angle ( \\theta ) from the horizontal, its motion can be described using the following equations: Horizontal Range: ( R = \\frac{v_0^2 \\sin(2\\theta)}{g} ) Maximum Height: ( H = \\frac{v_0^2 \\sin^2(\\theta)}{2g} ) Time of Flight: ( T = \\frac{2v_0 \\sin(\\theta)}{g} ) Here, ( g ) is the acceleration due to gravity (approximately ( 9.81 , \\text{m/s}^2 ) on Earth). Range and Angle of Projection: The range ( R ) is maximized when the angle of projection ( \\theta ) is ( 45^\\circ ), assuming no air resistance. This is because the function ( \\sin(2\\theta) ) is maximized at ( 2\\theta = 90^\\circ ).","title":"Implementation"},{"location":"Physics/1%20Mechanics/4.Implementation/#implementation","text":"Run simulations on Projectile Motion When a projectile is launched with an initial velocity ( v_0 ) at an angle ( \\theta ) from the horizontal, its motion can be described using the following equations: Horizontal Range: ( R = \\frac{v_0^2 \\sin(2\\theta)}{g} ) Maximum Height: ( H = \\frac{v_0^2 \\sin^2(\\theta)}{2g} ) Time of Flight: ( T = \\frac{2v_0 \\sin(\\theta)}{g} ) Here, ( g ) is the acceleration due to gravity (approximately ( 9.81 , \\text{m/s}^2 ) on Earth). Range and Angle of Projection: The range ( R ) is maximized when the angle of projection ( \\theta ) is ( 45^\\circ ), assuming no air resistance. This is because the function ( \\sin(2\\theta) ) is maximized at ( 2\\theta = 90^\\circ ).","title":"Implementation"},{"location":"Physics/1%20Mechanics/AngleOfProjection/","text":"Range as a Function of the Angle of Projection Range vs. Angle of Projection The angle of projection in projectile motion is a critical parameter that affects the trajectory, range, time of flight, and maximum height of a projectile. The angle of projection, combined with initial velocity, gravitational acceleration, and launch height, determines the path followed by the projectile. Let's break down how these parameters interact and the different sets of solutions that can arise: 1. Initial Velocity (v\u2080): Definition: The speed at which the projectile is launched. Impact: Affects the range and maximum height. For a given angle, increasing the initial velocity increases both the range and the height of the projectile. Gravitational Acceleration (g): Definition: The acceleration due to gravity, typically (9.81 , \\text{m/s}^2) on Earth. Impact: Acts downward, affecting the time of flight and the shape of the trajectory. It pulls the projectile downward, creating a parabolic path. Launch Height (h): Definition: The height from which the projectile is launched relative to the landing point. Impact: Influences the time the projectile stays in the air and the range. A higher launch point allows for a longer flight time and potentially greater range, depending on the angle of projection. Scripts/Codes","title":"Range as a Function of the Angle of Projection"},{"location":"Physics/1%20Mechanics/AngleOfProjection/#range-as-a-function-of-the-angle-of-projection","text":"Range vs. Angle of Projection The angle of projection in projectile motion is a critical parameter that affects the trajectory, range, time of flight, and maximum height of a projectile. The angle of projection, combined with initial velocity, gravitational acceleration, and launch height, determines the path followed by the projectile. Let's break down how these parameters interact and the different sets of solutions that can arise: 1. Initial Velocity (v\u2080): Definition: The speed at which the projectile is launched. Impact: Affects the range and maximum height. For a given angle, increasing the initial velocity increases both the range and the height of the projectile. Gravitational Acceleration (g): Definition: The acceleration due to gravity, typically (9.81 , \\text{m/s}^2) on Earth. Impact: Acts downward, affecting the time of flight and the shape of the trajectory. It pulls the projectile downward, creating a parabolic path. Launch Height (h): Definition: The height from which the projectile is launched relative to the landing point. Impact: Influences the time the projectile stays in the air and the range. A higher launch point allows for a longer flight time and potentially greater range, depending on the angle of projection. Scripts/Codes","title":"Range as a Function of the Angle of Projection"},{"location":"Physics/1%20Mechanics/SourceCode/","text":"Source code function calculateRange(velocity, angle, gravity, height) { const angleRad = (Math.PI / 180) * angle; const vX = velocity * Math.cos(angleRad); const vY = velocity * Math.sin(angleRad); // Time to reach the highest point const tUp = vY / gravity; const tDown = Math.sqrt((vY ** 2 + 2 * gravity * height) / gravity ** 2); const totalTime = tUp + tDown; // Calculate range return vX * totalTime; } function plotProjectile() { const velocity = parseFloat(document.getElementById('velocity').value); const angle = parseFloat(document.getElementById('angle').value); const gravity = parseFloat(document.getElementById('gravity').value); const height = parseFloat(document.getElementById('height').value); const ranges = []; const angles = []; for (let a = 0; a <= 90; a += 1) { angles.push(a); ranges.push(calculateRange(velocity, a, gravity, height)); } const trace = { x: angles, y: ranges, type: 'scatter', mode: 'lines+markers', name: 'Range vs Angle' }; const layout = { title: 'Projectile Motion', xaxis: { title: 'Angle of Projection (degrees)' }, yaxis: { title: 'Range (meters)' } }; Plotly.newPlot('plot', [trace], layout); }","title":"Source code"},{"location":"Physics/1%20Mechanics/SourceCode/#source-code","text":"function calculateRange(velocity, angle, gravity, height) { const angleRad = (Math.PI / 180) * angle; const vX = velocity * Math.cos(angleRad); const vY = velocity * Math.sin(angleRad); // Time to reach the highest point const tUp = vY / gravity; const tDown = Math.sqrt((vY ** 2 + 2 * gravity * height) / gravity ** 2); const totalTime = tUp + tDown; // Calculate range return vX * totalTime; } function plotProjectile() { const velocity = parseFloat(document.getElementById('velocity').value); const angle = parseFloat(document.getElementById('angle').value); const gravity = parseFloat(document.getElementById('gravity').value); const height = parseFloat(document.getElementById('height').value); const ranges = []; const angles = []; for (let a = 0; a <= 90; a += 1) { angles.push(a); ranges.push(calculateRange(velocity, a, gravity, height)); } const trace = { x: angles, y: ranges, type: 'scatter', mode: 'lines+markers', name: 'Range vs Angle' }; const layout = { title: 'Projectile Motion', xaxis: { title: 'Angle of Projection (degrees)' }, yaxis: { title: 'Range (meters)' } }; Plotly.newPlot('plot', [trace], layout); }","title":"Source code"},{"location":"Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"}]}